#!/bin/bash

## Amy Olex
## 1/15/15
## Script to iterate through a list of TCGA analysis IDs and preprocess the BAM files so they are compatible with GATK 3.1 software.
## This script was modified to check and see if each file exists before creating it.  If it does exist them move on to the next step.
## This script runs the full GATK Pipeline on each analysis in full


#INFILE="test_list.txt"
INFILE="analysis_id_list.txt"
TMPDIR="/home/alolex/data/isilon_tcga/BRCA/WXS/tmp_bam/"
OUTDIR="/home/alolex/data/isilon_tcga/BRCA/WXS/gatk_ready/"
BAMDIR="/home/alolex/data/isilon_tcga/BRCA/WXS/"
VCFDIR="/home/alolex/data/isilon_tcga/BRCA/WXS/gatk_vcf/"
LOGFILE="/home/alolex/data/clients/MDozmorov/gatk_scriptDev/gatk_pipeline_011715.log"

# Save analysis ids to a list
read -d '' -r -a dirList < $INFILE

cd $BAMDIR

counter=`echo ${#dirList[@]}`

#while [ $counter -gt 0 ]; do

	declare -a loopList=( ${dirList[@]} )

	for dir in ${loopList[@]}
	do
	   if [ -d $BAMDIR$dir ];
	   then
    		echo "FOUND DIRECTORY ... Processing ... $BAMDIR$dir" >> $LOGFILE
		echo "FOUND DIRECTORY ... Processing ... $BAMDIR$dir"
    		# Get base name of BAM file, use .bam.bai for bai file    
    		tmp=`ls $dir/*.bam`
    		filebase=`basename $tmp .bam`
    		bamfile=`echo $filebase.bam`
    		baifile=`echo $filebase.bam.bai`
		
    		### Run SortSam
    		input=`echo $BAMDIR$dir/$filebase.bam`
    		output=`echo $TMPDIR$filebase.sorted.bam`
    		
		if [ ! -e $TMPDIR$filebase.sorted.bam ];
		then
		   cmd=`echo "java -Xmx8g -Djava.io.tmpdir=/home/alolex/tmp/scratch -jar /opt/picard-tools-1.115/SortSam.jar INPUT=$input OUTPUT=$output SORT_ORDER=coordinate VALIDATION_STRINGENCY=LENIENT TMP_DIR=/home/alolex/tmp/scratch"`
    		   echo "Executing Step 3.1 ... $cmd" >> $LOGFILE
		   echo "Executing Step 3.1 ... $cmd"
    		   eval $cmd
		   echo "Done Step 3.1" >> $LOGFILE
		else
		   echo "File Exists, moving to next step : $output" >> $LOGFILE
		   echo "File Exists, moving to next step : $output"
		fi

    		### Run MarkDuplicates
    		input=`echo	$TMPDIR$filebase.sorted.bam`
    		output=`echo $TMPDIR$filebase.dedup.bam`
    		
		if [ ! -e $TMPDIR$filebase.dedup.bam ];
		then
		   cmd=`echo "java -Xmx8g -Djava.io.tmpdir=/home/alolex/tmp/scratch -jar /opt/picard-tools-1.115/MarkDuplicates.jar INPUT=$input OUTPUT=$output METRICS_FILE=metrics VALIDATION_STRINGENCY=LENIENT TMP_DIR=/home/alolex/tmp/scratch"`
    		   echo "Executing Step 3.2 ... $cmd" >> $LOGFILE
		   echo "Executing Step 3.2 ... $cmd"
    		   eval $cmd
		   echo "Done Step 3.2" >> $LOGFILE
		else
		   echo "File Exists, moving to next step : $output" >> $LOGFILE
		   echo "File Exists, moving to next step : $output"
    		fi

		### Run AddOrReplaceReadGroups
    		input=`echo $TMPDIR$filebase.dedup.bam`
    		output=`echo $OUTDIR$filebase.gatkReady.bam`
    		
		if [ ! -e $OUTDIR$filebase.gatkReady.bam ];
		then
		   cmd=`echo "java -Xmx8g -Djava.io.tmpdir=/home/alolex/tmp/scratch -jar /opt/picard-tools-1.115/AddOrReplaceReadGroups.jar INPUT=$input OUTPUT=$output VALIDATION_STRINGENCY=LENIENT RGID=group1 RGLB=lib1 RGPL=illumina RGPU=unit1 RGSM=sample1 TMP_DIR=/home/alolex/tmp/scratch"`
    		   echo "Executing Step 3.3 ... $cmd" >> $LOGFILE
		   echo "Executing Step 3.3 ... $cmd"
    		   eval $cmd
		   echo "Done Step 3.3"  >> $LOGFILE
		else
		   echo "File Exists, moving to next step : $output" >> $LOGFILE
		   echo "File Exists, moving to next step : $output"
		fi

    		### Run BuildBamIndex
    		input=`echo $OUTDIR$filebase.gatkReady.bam`
    		
		if [ ! -e $OUTDIR$filebase.gatkReady.bai ];
		then
		   cmd=`echo "java -Xmx8g -Djava.io.tmpdir=/home/alolex/tmp/scratch -jar /opt/picard-tools-1.115/BuildBamIndex.jar INPUT=$input VALIDATION_STRINGENCY=LENIENT TMP_DIR=/home/alolex/tmp/scratch"`
    		   echo "Executing Step 3.4 ... $cmd" >> $LOGFILE
		   echo "Executing Step 3.4 ... $cmd"
    		   eval $cmd
		   echo "Done Step 3.4" >> $LOGFILE
		else
		   echo "File Exists, moving to next step .. $outfile"
		   echo "File Exists, moving to next step .. $outfile" >> $LOGFILE
		fi


                ### Run IndelRealigner
                input=`echo $OUTDIR$filebase.gatkReady.bam`
                output=`echo $OUTDIR$filebase.realign.bam`

                if [ ! -e $output ];
                then
                   cmd=`echo "java -Xmx8g -Djava.io.tmpdir=/home/alolex/tmp/scratch -jar /opt/GenomeAnalysisTK-3.1/GenomeAnalysisTK.jar -I $input -R /data/refGenomes/human/GRCh37-lite/GRCh37-lite.fa -T IndelRealigner -targetIntervals /data/refGenomes/human/GRCh37-lite/GRCh37-lite.gatk.intervals -o $output -known /opt/GenomeAnalysisTK-3.1/resources/Mills_and_1000G_gold_standard.indels.b37.sites.vcf"`
                   echo "Executing Step 4.2 ... $cmd" >> $LOGFILE
		   echo "Executing Step 4.2 ... $cmd"
                   eval $cmd
		   echo "Done Step 4.2" >> $LOGFILE
                else
                   echo "File Found, moving to next step : $outfile" >> $LOGFILE
		   echo "File Found, moving to next step : $outfile"
                fi

                ### Run BaseRecalibrator
                input=$output
                output=`echo $OUTDIR$filebase.recaldata.table`

                if [ ! -e $output ];
                then
                   cmd=`echo "java -Xmx8g -Djava.io.tmpdir=/home/alolex/tmp/scratch -jar /opt/GenomeAnalysisTK-3.1/GenomeAnalysisTK.jar -T BaseRecalibrator -R /data/refGenomes/human/GRCh37-lite/GRCh37-lite.fa -I $input -knownSites /opt/GenomeAnalysisTK-3.1/resources/dbsnp_138.b37.vcf -knownSites /opt/GenomeAnalysisTK-3.1/resources/Mills_and_1000G_gold_standard.indels.b37.sites.vcf -o $output"`
                   echo "Executing Step 5.1 ... $cmd" >> $LOGFILE
		   echo "Executing Step 5.1 ... $cmd"
                   eval $cmd
		   echo "Done Step 5.1" >> $LOGFILE
                else
                   echo "File Found, moving to next step : $output">> $LOGFILE
		   echo "File Found, moving to next step : $output"
                fi

                ### Run PrintReads
                input_bam=`echo $OUTDIR$filebase.realign.bam`
                input=$output
                output=`echo $OUTDIR$filebase.recal.bam`

                if [ ! -e $output ];
                then
                   cmd=`echo "java -Xmx8g -Djava.io.tmpdir=/home/alolex/tmp/scratch -jar /opt/GenomeAnalysisTK-3.1/GenomeAnalysisTK.jar -T PrintReads -R /data/refGenomes/human/GRCh37-lite/GRCh37-lite.fa -I $input_bam -BQSR $input -o $output"`
                   echo "Executing Step 5.4 ... $cmd" >> $LOGFILE
		   echo "Executing Step 5.4 ... $cmd"
                   eval $cmd
		   echo "Done Step 5.4" >> $LOGFILE
                else
                   echo "File Found, moving to next step : $output" >> $LOGFILE
		   echo "File Found, moving to next step : $output"
                fi


                ### Run HaplotypeCaller
                input=$output
                output=`echo $VCFDIR$filebase.rawVariants.vcf`

                if [ ! -e $output ];
                then
                   cmd=`echo "java -Xmx8g -Djava.io.tmpdir=/home/alolex/tmp/scratch -jar /opt/GenomeAnalysisTK-3.1/GenomeAnalysisTK.jar -T HaplotypeCaller -R /data/refGenomes/human/GRCh37-lite/GRCh37-lite.fa -I $input -o $output -ERC NONE -baqGOP 30 -variant_index_type LINEAR -variant_index_parameter 128000 --genotyping_mode DISCOVERY -stand_emit_conf 10 -stand_call_conf 30 -nct 4"`
                   echo "Executing Step 6 ... $cmd" >> $LOGFILE
		   echo "Executing Step 6 ... $cmd"
                   eval $cmd
		   echo "Done Step 6" >> $LOGFILE
                else
                   echo "File Found, moving to next step : $output" >> $LOGFILE
		   echo "File Found, moving to next step : $output"
                fi



                ### Run SelectVariants for SNPs
                input=$output
                output=`echo $VCFDIR$filebase.rawSNPS.vcf`

                if [ ! -e $output ];
                then
                   cmd=`echo "java -Xmx8g -Djava.io.tmpdir=/home/alolex/tmp/scratch -jar /opt/GenomeAnalysisTK-3.1/GenomeAnalysisTK.jar -T SelectVariants -R /data/refGenomes/human/GRCh37-lite/GRCh37-lite.fa -V $input -selectType SNP -o $output"`
                   echo "Executing Step 7.1 ... $cmd" >> $LOGFILE
                   eval $cmd
                else
                   echo "File Found, moving to next step : $output" >> $LOGFILE
                fi


               ### Run VariantFiltration for SNPs
                input=$output
                output=`echo $VCFDIR$filebase.filteredSNPS.vcf`

                if [ ! -e $output ];
                then
                   cmd=`echo "java -Xmx8g -Djava.io.tmpdir=/home/alolex/tmp/scratch -jar /opt/GenomeAnalysisTK-3.1/GenomeAnalysisTK.jar -T VariantFiltration -R /data/refGenomes/human/GRCh37-lite/GRCh37-lite.fa -V $input --filterExpression \"QD < 2.0 || FS > 60.0 || MQ < 40.0 || HaplotypeScore > 13.0 || MappingQualityRankSum < -12.5 || ReadPosRankSum < -8.0\" --filterName \"my_snp_filter\" -o $output"`
                   echo "Executing Step 7.2 ... $cmd" >> $LOGFILE
                   eval $cmd
                else
                   echo "File Found, moving to next step : $output" >> $LOGFILE
                fi


                ### Run SelectVariants for INDELSs
                input=`echo $VCFDIR$filebase.rawVariants.vcf`
                output=`echo $VCFDIR$filebase.rawINDELS.vcf`

                if [ ! -e $output ];
                then
                   cmd=`echo "java -Xmx8g -Djava.io.tmpdir=/home/alolex/tmp/scratch -jar /opt/GenomeAnalysisTK-3.1/GenomeAnalysisTK.jar -T SelectVariants -R /data/refGenomes/human/GRCh37-lite/GRCh37-lite.fa -V $input -selectType INDEL -o $output"`
                   echo "Executing Step 7.3 ... $cmd" >> $LOGFILE
                   eval $cmd
                else
                   echo "File Found, moving to next step : $output" >> $LOGFILE
                fi



                ### Run VariantFiltration for INDELs
                input=$output
                output=`echo $VCFDIR$filebase.filteredINDELS.vcf`

                if [ ! -e $output ];
                then
                   cmd=`echo "java -Xmx8g -Djava.io.tmpdir=/home/alolex/tmp/scratch -jar /opt/GenomeAnalysisTK-3.1/GenomeAnalysisTK.jar -T VariantFiltration -R /data/refGenomes/human/GRCh37-lite/GRCh37-lite.fa -V $input --filterExpression \"QD < 2.0 || FS > 200.0 || ReadPosRankSum < -20.0\" --filterName \"my_indel_filter\" -o $output"`
                   echo "Executing Step 7.4 ... $cmd" >> $LOGFILE
                   eval $cmd
                else
                   echo "File Found, exiting script : $output" >> $LOGFILE
                fi


		### Now remove this directory name from the directory list
		declare -a dirList=( ${dirList[@]/$dir/} )
		echo "$dir REMOVED from list."

	   else
		echo "$BAMDIR$dir NOT FOUND ... Skipping" >> $LOGFILE
		echo "$BAMDIR$dir NOT FOUND ... Skipping"
	   fi
	done 
	# done for loop
	
	counter=`echo ${#dirList[@]}`
	echo "New Counter Value $counter"
	echo "FINISHED!" >> $LOGFILE
#done
# done while loop
